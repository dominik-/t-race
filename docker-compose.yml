version: "3.2"

services:
    jaeger-agent:
      image: jaegertracing/jaeger-agent:1.14
      command: ["--reporter.type=grpc", "--reporter.grpc.host-port=jaeger-collector:14250"]
      networks: 
        - tracer-backend
      ports:
        - "5775/udp"
        - "6831:6831/udp"
        - "6832/udp"
        - "5778"
      restart: on-failure
      depends_on:
        - jaeger-collector

    jaeger-collector:
      image: jaegertracing/jaeger-collector:1.14-ts
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra", "--collector.zipkin.http-port=9411"]
      networks: 
        - tracer-backend
      ports:
        - "14269"
        - "14268:14268"
        - "14267"
        - "9411:9411"
        - "14250"
      restart: on-failure
      depends_on:
        - cassandra-schema

    jaeger-query:
      image: jaegertracing/jaeger-query:1.14
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
      networks: 
        - tracer-backend
      ports:
        - "16686:16686"
        - "16687"
      restart: on-failure
      depends_on:
        - cassandra-schema

    cassandra:
      image: cassandra:3.9
      networks: 
        - tracer-backend
      ports:
        - "9042:9042"

    cassandra-schema:
      image: jaegertracing/jaeger-cassandra-schema:1.14-ts
      networks: 
        - tracer-backend
      depends_on:
        - cassandra

    prometheus:
      image: prom/prometheus
      networks:
        - tracer-backend
      volumes:
        - type: bind
          source: ./prometheus.yml
          target: /etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
    
    cadvisor:
      image: google/cadvisor:latest
      networks:
        - tracer-backend
      ports:
        - "8080:8080"
      volumes:
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
      restart: always

    node-exporter:
      image: prom/node-exporter
      volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
      command: 
        - '--path.procfs=/host/proc' 
        - '--path.sysfs=/host/sys'
        - --collector.filesystem.ignored-mount-points
        - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      ports:
        - "9100:9100"
      networks:
        - tracer-backend
      restart: always

networks:
  tracer-backend:
