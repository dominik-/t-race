version: "3.2"

services:
    jaeger-agent:
      image: jaegertracing/jaeger-agent:1.9
      command: ["--reporter.type=grpc", "--reporter.grpc.host-port=jaeger-collector:14250"]
      networks: 
        - tracer-backend
      ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "5778:5778"
      restart: on-failure
      depends_on:
        - jaeger-collector

    jaeger-collector:
      image: jaegertracing/jaeger-collector:1.9
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra", "--collector.zipkin.http-port=9411"]
      networks: 
        - tracer-backend
      ports:
        - "14269"
        - "14268:14268"
        - "14267"
        - "9411:9411"
        - "14250"
      restart: on-failure
      depends_on:
        - cassandra-schema

    jaeger-query:
      image: jaegertracing/jaeger-query:1.9
      command: ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
      networks: 
        - tracer-backend
      ports:
        - "16686:16686"
        - "16687"
      restart: on-failure
      depends_on:
        - cassandra-schema

    cassandra:
      image: cassandra:3.9
      networks: 
        - tracer-backend

    cassandra-schema:
      image: jaegertracing/jaeger-cassandra-schema:1.9
      networks: 
        - tracer-backend
      depends_on:
        - cassandra

    prometheus:
      image: prom/prometheus
      networks:
        - tracer-backend
      volumes:
        - type: bind
          source: ./prometheus.yml
          target: /etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"

networks:
  tracer-backend:
