// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: api/tracewriter.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelationshipType int32

const (
	RelationshipType_CHILD    RelationshipType = 0
	RelationshipType_FOLLOWS  RelationshipType = 1
	RelationshipType_SERVER   RelationshipType = 2
	RelationshipType_CLIENT   RelationshipType = 3
	RelationshipType_PRODUCER RelationshipType = 4
	RelationshipType_CONSUMER RelationshipType = 5
	RelationshipType_INTERNAL RelationshipType = 6
)

// Enum value maps for RelationshipType.
var (
	RelationshipType_name = map[int32]string{
		0: "CHILD",
		1: "FOLLOWS",
		2: "SERVER",
		3: "CLIENT",
		4: "PRODUCER",
		5: "CONSUMER",
		6: "INTERNAL",
	}
	RelationshipType_value = map[string]int32{
		"CHILD":    0,
		"FOLLOWS":  1,
		"SERVER":   2,
		"CLIENT":   3,
		"PRODUCER": 4,
		"CONSUMER": 5,
		"INTERNAL": 6,
	}
)

func (x RelationshipType) Enum() *RelationshipType {
	p := new(RelationshipType)
	*p = x
	return p
}

func (x RelationshipType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationshipType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_tracewriter_proto_enumTypes[0].Descriptor()
}

func (RelationshipType) Type() protoreflect.EnumType {
	return &file_api_tracewriter_proto_enumTypes[0]
}

func (x RelationshipType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationshipType.Descriptor instead.
func (RelationshipType) EnumDescriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{0}
}

type WorkerConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId         string `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	ServiceName      string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	RuntimeSeconds   int64  `protobuf:"varint,4,opt,name=runtime_seconds,json=runtimeSeconds,proto3" json:"runtime_seconds,omitempty"`
	TargetThroughput int64  `protobuf:"varint,5,opt,name=target_throughput,json=targetThroughput,proto3" json:"target_throughput,omitempty"`
	//the sink is the backend address to send traces to, i.e. an endpoint of an opentracing-compatible tracer
	SinkHostPort string  `protobuf:"bytes,6,opt,name=sink_host_port,json=sinkHostPort,proto3" json:"sink_host_port,omitempty"`
	Units        []*Unit `protobuf:"bytes,9,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *WorkerConfiguration) Reset() {
	*x = WorkerConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerConfiguration) ProtoMessage() {}

func (x *WorkerConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerConfiguration.ProtoReflect.Descriptor instead.
func (*WorkerConfiguration) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerConfiguration) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *WorkerConfiguration) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *WorkerConfiguration) GetRuntimeSeconds() int64 {
	if x != nil {
		return x.RuntimeSeconds
	}
	return 0
}

func (x *WorkerConfiguration) GetTargetThroughput() int64 {
	if x != nil {
		return x.TargetThroughput
	}
	return 0
}

func (x *WorkerConfiguration) GetSinkHostPort() string {
	if x != nil {
		return x.SinkHostPort
	}
	return ""
}

func (x *WorkerConfiguration) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

//Unit captures a request-response interaction with another emulated service.
type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string           `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	RelType    RelationshipType `protobuf:"varint,2,opt,name=rel_type,json=relType,proto3,enum=api.RelationshipType" json:"rel_type,omitempty"`
	//This is sampled and waited for before the call is dispatched to the next worker listening at invoked_host_port.
	WorkBefore *Work            `protobuf:"bytes,3,opt,name=work_before,json=workBefore,proto3" json:"work_before,omitempty"`
	Context    *ContextTemplate `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
	Inputs     []*UnitRef       `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Successors []*UnitRef       `protobuf:"bytes,7,rep,name=successors,proto3" json:"successors,omitempty"`
	//this ration indicates how throughput of the service is distributed across units. If this is 0, then the unit is not a "root" unit and consequently not actively generating load.
	ThroughputRatio float64 `protobuf:"fixed64,8,opt,name=throughputRatio,proto3" json:"throughputRatio,omitempty"`
	Sync            bool    `protobuf:"varint,9,opt,name=sync,proto3" json:"sync,omitempty"`
	IsServer        bool    `protobuf:"varint,10,opt,name=isServer,proto3" json:"isServer,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{1}
}

func (x *Unit) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Unit) GetRelType() RelationshipType {
	if x != nil {
		return x.RelType
	}
	return RelationshipType_CHILD
}

func (x *Unit) GetWorkBefore() *Work {
	if x != nil {
		return x.WorkBefore
	}
	return nil
}

func (x *Unit) GetContext() *ContextTemplate {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Unit) GetInputs() []*UnitRef {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Unit) GetSuccessors() []*UnitRef {
	if x != nil {
		return x.Successors
	}
	return nil
}

func (x *Unit) GetThroughputRatio() float64 {
	if x != nil {
		return x.ThroughputRatio
	}
	return 0
}

func (x *Unit) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *Unit) GetIsServer() bool {
	if x != nil {
		return x.IsServer
	}
	return false
}

type UnitRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	UnitId    string `protobuf:"bytes,2,opt,name=unitId,proto3" json:"unitId,omitempty"`
	Sync      bool   `protobuf:"varint,3,opt,name=sync,proto3" json:"sync,omitempty"`
	IsRemote  bool   `protobuf:"varint,4,opt,name=isRemote,proto3" json:"isRemote,omitempty"`                //do we need this here? likely not, just look up the service by id from deployment?
	HostPort  string `protobuf:"bytes,5,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"` //do we need this here? likely not, just look up the service by id from deployment?
}

func (x *UnitRef) Reset() {
	*x = UnitRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitRef) ProtoMessage() {}

func (x *UnitRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitRef.ProtoReflect.Descriptor instead.
func (*UnitRef) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{2}
}

func (x *UnitRef) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UnitRef) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UnitRef) GetSync() bool {
	if x != nil {
		return x.Sync
	}
	return false
}

func (x *UnitRef) GetIsRemote() bool {
	if x != nil {
		return x.IsRemote
	}
	return false
}

func (x *UnitRef) GetHostPort() string {
	if x != nil {
		return x.HostPort
	}
	return ""
}

type Work struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DistType   string             `protobuf:"bytes,1,opt,name=dist_type,json=distType,proto3" json:"dist_type,omitempty"`
	Parameters map[string]float64 `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *Work) Reset() {
	*x = Work{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Work) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Work) ProtoMessage() {}

func (x *Work) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Work.ProtoReflect.Descriptor instead.
func (*Work) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{3}
}

func (x *Work) GetDistType() string {
	if x != nil {
		return x.DistType
	}
	return ""
}

func (x *Work) GetParameters() map[string]float64 {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type KeyValueTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyStatic   string `protobuf:"bytes,1,opt,name=key_static,json=keyStatic,proto3" json:"key_static,omitempty"`
	KeyLength   int64  `protobuf:"varint,2,opt,name=key_length,json=keyLength,proto3" json:"key_length,omitempty"`
	ValueStatic string `protobuf:"bytes,3,opt,name=value_static,json=valueStatic,proto3" json:"value_static,omitempty"`
	ValueLength int64  `protobuf:"varint,4,opt,name=value_length,json=valueLength,proto3" json:"value_length,omitempty"`
}

func (x *KeyValueTemplate) Reset() {
	*x = KeyValueTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueTemplate) ProtoMessage() {}

func (x *KeyValueTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueTemplate.ProtoReflect.Descriptor instead.
func (*KeyValueTemplate) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{4}
}

func (x *KeyValueTemplate) GetKeyStatic() string {
	if x != nil {
		return x.KeyStatic
	}
	return ""
}

func (x *KeyValueTemplate) GetKeyLength() int64 {
	if x != nil {
		return x.KeyLength
	}
	return 0
}

func (x *KeyValueTemplate) GetValueStatic() string {
	if x != nil {
		return x.ValueStatic
	}
	return ""
}

func (x *KeyValueTemplate) GetValueLength() int64 {
	if x != nil {
		return x.ValueLength
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    []byte                 `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	TraceNum   int64                  `protobuf:"varint,2,opt,name=trace_num,json=traceNum,proto3" json:"trace_num,omitempty"`
	SpanId     []byte                 `protobuf:"bytes,3,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	SpanNum    int64                  `protobuf:"varint,4,opt,name=span_num,json=spanNum,proto3" json:"span_num,omitempty"`
	StartTime  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	Sampled    bool                   `protobuf:"varint,7,opt,name=sampled,proto3" json:"sampled,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{5}
}

func (x *Result) GetTraceId() []byte {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *Result) GetTraceNum() int64 {
	if x != nil {
		return x.TraceNum
	}
	return 0
}

func (x *Result) GetSpanId() []byte {
	if x != nil {
		return x.SpanId
	}
	return nil
}

func (x *Result) GetSpanNum() int64 {
	if x != nil {
		return x.SpanNum
	}
	return 0
}

func (x *Result) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Result) GetFinishTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishTime
	}
	return nil
}

func (x *Result) GetSampled() bool {
	if x != nil {
		return x.Sampled
	}
	return false
}

type ContextTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags    []*KeyValueTemplate `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Logs    []*KeyValueTemplate `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	Baggage []*KeyValueTemplate `protobuf:"bytes,3,rep,name=baggage,proto3" json:"baggage,omitempty"`
}

func (x *ContextTemplate) Reset() {
	*x = ContextTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContextTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextTemplate) ProtoMessage() {}

func (x *ContextTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextTemplate.ProtoReflect.Descriptor instead.
func (*ContextTemplate) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{6}
}

func (x *ContextTemplate) GetTags() []*KeyValueTemplate {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ContextTemplate) GetLogs() []*KeyValueTemplate {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ContextTemplate) GetBaggage() []*KeyValueTemplate {
	if x != nil {
		return x.Baggage
	}
	return nil
}

type ResultPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId      string    `protobuf:"bytes,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	EnvironmentId string    `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Results       []*Result `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ResultPackage) Reset() {
	*x = ResultPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPackage) ProtoMessage() {}

func (x *ResultPackage) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPackage.ProtoReflect.Descriptor instead.
func (*ResultPackage) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{7}
}

func (x *ResultPackage) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *ResultPackage) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ResultPackage) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type DispatchId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitReference string `protobuf:"bytes,1,opt,name=unitReference,proto3" json:"unitReference,omitempty"`
}

func (x *DispatchId) Reset() {
	*x = DispatchId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DispatchId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchId) ProtoMessage() {}

func (x *DispatchId) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchId.ProtoReflect.Descriptor instead.
func (*DispatchId) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{8}
}

func (x *DispatchId) GetUnitReference() string {
	if x != nil {
		return x.UnitReference
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_tracewriter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_tracewriter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_tracewriter_proto_rawDescGZIP(), []int{9}
}

var File_api_tracewriter_proto protoreflect.FileDescriptor

var file_api_tracewriter_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01,
	0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x69, 0x6e, 0x6b, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x6b, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x1f, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x22, 0xe2, 0x02, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x2c, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x07, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x79, 0x6e,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65,
	0x79, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22,
	0x86, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x61, 0x67, 0x67, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x07, 0x62, 0x61, 0x67, 0x67,
	0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x32, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x6c, 0x0a, 0x10,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46,
	0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x06, 0x32, 0x79, 0x0a, 0x0f, 0x42, 0x65,
	0x6e, 0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x25,
	0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x05, 0x5a, 0x03, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_tracewriter_proto_rawDescOnce sync.Once
	file_api_tracewriter_proto_rawDescData = file_api_tracewriter_proto_rawDesc
)

func file_api_tracewriter_proto_rawDescGZIP() []byte {
	file_api_tracewriter_proto_rawDescOnce.Do(func() {
		file_api_tracewriter_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tracewriter_proto_rawDescData)
	})
	return file_api_tracewriter_proto_rawDescData
}

var file_api_tracewriter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_tracewriter_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_tracewriter_proto_goTypes = []interface{}{
	(RelationshipType)(0),         // 0: api.RelationshipType
	(*WorkerConfiguration)(nil),   // 1: api.WorkerConfiguration
	(*Unit)(nil),                  // 2: api.Unit
	(*UnitRef)(nil),               // 3: api.UnitRef
	(*Work)(nil),                  // 4: api.Work
	(*KeyValueTemplate)(nil),      // 5: api.KeyValueTemplate
	(*Result)(nil),                // 6: api.Result
	(*ContextTemplate)(nil),       // 7: api.ContextTemplate
	(*ResultPackage)(nil),         // 8: api.ResultPackage
	(*DispatchId)(nil),            // 9: api.DispatchId
	(*Empty)(nil),                 // 10: api.Empty
	nil,                           // 11: api.Work.ParametersEntry
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_api_tracewriter_proto_depIdxs = []int32{
	2,  // 0: api.WorkerConfiguration.units:type_name -> api.Unit
	0,  // 1: api.Unit.rel_type:type_name -> api.RelationshipType
	4,  // 2: api.Unit.work_before:type_name -> api.Work
	7,  // 3: api.Unit.context:type_name -> api.ContextTemplate
	3,  // 4: api.Unit.inputs:type_name -> api.UnitRef
	3,  // 5: api.Unit.successors:type_name -> api.UnitRef
	11, // 6: api.Work.parameters:type_name -> api.Work.ParametersEntry
	12, // 7: api.Result.start_time:type_name -> google.protobuf.Timestamp
	12, // 8: api.Result.finish_time:type_name -> google.protobuf.Timestamp
	5,  // 9: api.ContextTemplate.tags:type_name -> api.KeyValueTemplate
	5,  // 10: api.ContextTemplate.logs:type_name -> api.KeyValueTemplate
	5,  // 11: api.ContextTemplate.baggage:type_name -> api.KeyValueTemplate
	6,  // 12: api.ResultPackage.results:type_name -> api.Result
	1,  // 13: api.BenchmarkWorker.StartWorker:input_type -> api.WorkerConfiguration
	9,  // 14: api.BenchmarkWorker.Call:input_type -> api.DispatchId
	8,  // 15: api.BenchmarkWorker.StartWorker:output_type -> api.ResultPackage
	10, // 16: api.BenchmarkWorker.Call:output_type -> api.Empty
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_tracewriter_proto_init() }
func file_api_tracewriter_proto_init() {
	if File_api_tracewriter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_tracewriter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Work); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContextTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DispatchId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_tracewriter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tracewriter_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tracewriter_proto_goTypes,
		DependencyIndexes: file_api_tracewriter_proto_depIdxs,
		EnumInfos:         file_api_tracewriter_proto_enumTypes,
		MessageInfos:      file_api_tracewriter_proto_msgTypes,
	}.Build()
	File_api_tracewriter_proto = out.File
	file_api_tracewriter_proto_rawDesc = nil
	file_api_tracewriter_proto_goTypes = nil
	file_api_tracewriter_proto_depIdxs = nil
}
